{"ast":null,"code":"var _jsxFileName = \"/Users/jaclynclark/Development/projects/personal-react-site/src/AllInfoContainer.js\";\nimport React, { Component } from 'react';\nimport { withCharacter } from './MyProvider';\nimport { Link } from 'react-router-dom';\n\nclass AllInfoContainer extends Component {\n  componentDidMount() {\n    this.props.getAllInfo();\n  }\n\n  render() {\n    const mappedInfo = this.props.allInfo.map(info => React.createElement(Link, {\n      to: info.spell ? '/spells/' + info._id : '/character/' + info._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, info.spell ? info.spell : info.name));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, mappedInfo);\n  }\n\n}\n\nexport default withCharacter(AllInfoContainer);","map":{"version":3,"sources":["/Users/jaclynclark/Development/projects/personal-react-site/src/AllInfoContainer.js"],"names":["React","Component","withCharacter","Link","AllInfoContainer","componentDidMount","props","getAllInfo","render","mappedInfo","allInfo","map","info","spell","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACrCI,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,UAAX;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAMC,UAAU,GAAG,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuBC,IAAI,IAAI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEA,IAAI,CAACC,KAAL,GAAa,aAAaD,IAAI,CAACE,GAA/B,GAAqC,gBAAgBF,IAAI,CAACE,GAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2EF,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACC,KAAlB,GAA0BD,IAAI,CAACG,IAA1G,CAA/B,CAAnB;AACJ,WACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,UADL,CADR;AAKC;;AAZoC;;AAezC,eAAeP,aAAa,CAACE,gBAAD,CAA5B","sourcesContent":["import React, {Component} from 'react'\nimport { withCharacter } from './MyProvider'\nimport {Link} from 'react-router-dom'\n\nclass AllInfoContainer extends Component {\n    componentDidMount(){\n        this.props.getAllInfo()\n    }\n    \n    render(){\n        const mappedInfo = this.props.allInfo.map(info => <Link to={info.spell ? '/spells/' + info._id : '/character/' + info._id} >{info.spell ? info.spell : info.name}</Link>)\n    return(\n            <div>\n                {mappedInfo}\n            </div>\n        )\n    }\n}\n\nexport default withCharacter(AllInfoContainer)"]},"metadata":{},"sourceType":"module"}