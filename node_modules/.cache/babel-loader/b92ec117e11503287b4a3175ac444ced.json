{"ast":null,"code":"var _jsxFileName = \"/Users/jaclynclark/Development/projects/personal-react-site/src/Search.js\";\nimport React, { Component } from 'react';\nimport { withProvider } from './MyProvider';\nimport { Link } from 'react-router-dom'; // import AllInfoContainer from './AllInfoContainer'\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'searchType') {\n        this.props.clearResults();\n      }\n    };\n\n    this.handleSubmit = (e, thing) => {\n      e.preventDefault();\n      this.props.filterSearch(thing, this.state.searchType);\n    };\n\n    this.state = {\n      search: '',\n      searchType: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllCharacters();\n    this.props.getAllSpells();\n    console.log(this.props.allInfo);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e, this.state.search),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleChange,\n      name: \"searchType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Select Option\"), React.createElement(\"option\", {\n      value: \"character\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Characters\"), React.createElement(\"option\", {\n      value: \"spells\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Spells\")), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"search\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"div\", {\n      className: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.searchType === 'character' ? this.props.results.map(result => React.createElement(Link, {\n      to: '/character/' + result._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, result.name)) : this.props.results.map(result => React.createElement(Link, {\n      to: '/spells/' + result._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, result.spell))));\n  }\n\n}\n\nexport default withProvider(Search);","map":{"version":3,"sources":["/Users/jaclynclark/Development/projects/personal-react-site/src/Search.js"],"names":["React","Component","withProvider","Link","Search","constructor","handleChange","e","setState","target","name","value","props","clearResults","handleSubmit","thing","preventDefault","filterSearch","state","searchType","search","componentDidMount","getAllCharacters","getAllSpells","console","log","allInfo","render","results","map","result","_id","spell"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CACA;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC3BI,EAAAA,WAAW,GAAE;AACT;;AADS,SAcbC,YAda,GAcGC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AAAC,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA3B,OAAd;;AACA,UAAGJ,CAAC,CAACE,MAAF,CAASC,IAAT,KAAkB,YAArB,EAAkC;AAC9B,aAAKE,KAAL,CAAWC,YAAX;AACH;AACJ,KAnBY;;AAAA,SAqBbC,YArBa,GAqBE,CAACP,CAAD,EAAIQ,KAAJ,KAAc;AACzBR,MAAAA,CAAC,CAACS,cAAF;AACA,WAAKJ,KAAL,CAAWK,YAAX,CAAwBF,KAAxB,EAA+B,KAAKG,KAAL,CAAWC,UAA1C;AACH,KAxBY;;AAET,SAAKD,KAAL,GAAa;AACTE,MAAAA,MAAM,EAAE,EADC;AAETD,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEDE,EAAAA,iBAAiB,GAAE;AACf,SAAKT,KAAL,CAAWU,gBAAX;AACA,SAAKV,KAAL,CAAWW,YAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWc,OAAvB;AACH;;AAcDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAGpB,CAAD,IAAO,KAAKO,YAAL,CAAkBP,CAAlB,EAAqB,KAAKW,KAAL,CAAWE,MAAhC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,QAAQ,EAAE,KAAKd,YAAvB;AAAqC,MAAA,IAAI,EAAC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,EAMI;AAAO,MAAA,QAAQ,EAAE,KAAKA,YAAtB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAkD,MAAA,IAAI,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CADJ,EAUI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKY,KAAL,CAAWC,UAAX,KAA0B,WAA1B,GACG,KAAKP,KAAL,CAAWgB,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,gBAAgBA,MAAM,CAACC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCD,MAAM,CAACpB,IAA9C,CAAjC,CADH,GAGG,KAAKE,KAAL,CAAWgB,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,aAAaA,MAAM,CAACC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCD,MAAM,CAACE,KAA3C,CAAjC,CAJR,CAVJ,CADJ;AAuBH;;AAnD0B;;AAsD/B,eAAe9B,YAAY,CAACE,MAAD,CAA3B","sourcesContent":["import React, {Component} from 'react'\nimport {withProvider} from './MyProvider'\nimport {Link} from 'react-router-dom'\n// import AllInfoContainer from './AllInfoContainer'\n\nclass Search extends Component {\n    constructor(){\n        super()\n        this.state = {\n            search: '',\n            searchType: '',\n        }\n    }\n\n    componentDidMount(){\n        this.props.getAllCharacters()\n        this.props.getAllSpells()\n        console.log(this.props.allInfo)\n    }\n    \n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n        if(e.target.name === 'searchType'){\n            this.props.clearResults()\n        }\n    }\n\n    handleSubmit = (e, thing) => {\n        e.preventDefault()\n        this.props.filterSearch(thing, this.state.searchType)\n    }\n\n    render() {\n        return(\n            <div className='search'>\n                <form onSubmit={(e) => this.handleSubmit(e, this.state.search)}>\n                    <select onChange={this.handleChange} name=\"searchType\" >\n                        <option>Select Option</option>\n                        <option value='character' >Characters</option>\n                        <option value=\"spells\">Spells</option>\n                        </select>\n                    <input onChange={this.handleChange} name='search' type=\"text\"/>\n                    <button>Search</button>\n                </form>\n                <div className='results'>\n                    {this.state.searchType === 'character' ?\n                        this.props.results.map(result => <Link to={'/character/' + result._id}>{result.name}</Link>)\n                    :\n                        this.props.results.map(result => <Link to={'/spells/' + result._id}>{result.spell}</Link>)\n                    }\n                </div>\n                {/* <div>\n                    <AllInfoContainer />\n                </div> */}\n            </div>\n        )\n    }\n}\n\nexport default withProvider(Search)"]},"metadata":{},"sourceType":"module"}