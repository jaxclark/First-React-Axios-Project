{"ast":null,"code":"var _jsxFileName = \"/Users/jaclynclark/Development/projects/personal-react-site/src/AllInfoContainer.js\";\nimport React, { Component } from 'react';\nimport Search from './Search';\nimport { withCharacter } from './MyProvider';\n\nclass allInfoContainer extends Component {\n  componentDidMount() {\n    this.props.getAllInfo();\n    console.log(this.props.allInfo);\n  }\n\n  render() {\n    const mappedinfo = this.props.allInfo.map(info => React.createElement(Search, {\n      spellName: info.spell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, info.spellName));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, mappedinfo);\n  }\n\n}\n\nexport default withCharacter(allInfoContainer);","map":{"version":3,"sources":["/Users/jaclynclark/Development/projects/personal-react-site/src/AllInfoContainer.js"],"names":["React","Component","Search","withCharacter","allInfoContainer","componentDidMount","props","getAllInfo","console","log","allInfo","render","mappedinfo","map","info","spell","spellName"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACrCI,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,UAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,OAAvB;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAMC,UAAU,GAAG,KAAKN,KAAL,CAAWI,OAAX,CAAmBG,GAAnB,CAAuBC,IAAI,IAAI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEA,IAAI,CAACC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCD,IAAI,CAACE,SAArC,CAA/B,CAAnB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,UADL,CADJ;AAKH;;AAboC;;AAgBzC,eAAeT,aAAa,CAACC,gBAAD,CAA5B","sourcesContent":["import React, {Component} from 'react'\nimport Search from './Search'\nimport { withCharacter } from './MyProvider'\n\nclass allInfoContainer extends Component {\n    componentDidMount(){\n        this.props.getAllInfo()\n        console.log(this.props.allInfo)\n    }\n    \n    render(){\n        const mappedinfo = this.props.allInfo.map(info => <Search spellName={info.spell}>{info.spellName}</Search>)\n        return(\n            <div>\n                {mappedinfo}\n            </div>\n        )\n    }\n}\n\nexport default withCharacter(allInfoContainer)"]},"metadata":{},"sourceType":"module"}