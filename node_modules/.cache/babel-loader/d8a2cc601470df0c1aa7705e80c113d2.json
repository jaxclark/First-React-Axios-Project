{"ast":null,"code":"var _jsxFileName = \"/Users/jaclynclark/Development/projects/personal-react-site/src/SpellsList.js\";\nimport React, { Component } from 'react';\nimport Spells from './Spells';\nimport { withCharacter } from './MyProvider';\n\nclass SpellsList extends Component {\n  componentDidMount() {\n    this.props.getAllSpells();\n  }\n\n  render() {\n    const mappedSpells = this.props.spells.map(data => React.createElement(Spells, {\n      spell: data.spell,\n      type: data.type,\n      effect: data.effect,\n      spellID: data._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"spellsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, mappedSpells);\n  }\n\n}\n\nexport default withCharacter(SpellsList);","map":{"version":3,"sources":["/Users/jaclynclark/Development/projects/personal-react-site/src/SpellsList.js"],"names":["React","Component","Spells","withCharacter","SpellsList","componentDidMount","props","getAllSpells","render","mappedSpells","spells","map","data","spell","type","effect","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,aAAR,QAA4B,cAA5B;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,YAAX;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAMC,YAAY,GAAG,KAAKH,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,CAAuBC,IAAD,IAAU,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC,KAApB;AAA2B,MAAA,IAAI,EAAED,IAAI,CAACE,IAAtC;AAA4C,MAAA,MAAM,EAAEF,IAAI,CAACG,MAAzD;AAAiE,MAAA,OAAO,EAAEH,IAAI,CAACI,GAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,CAArB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,YADL,CADJ;AAKH;;AAZ8B;;AAenC,eAAeN,aAAa,CAACC,UAAD,CAA5B","sourcesContent":["import React, {Component} from 'react'\nimport Spells from './Spells'\nimport {withCharacter} from './MyProvider'\n\nclass SpellsList extends Component {\n    componentDidMount(){\n        this.props.getAllSpells()\n    }\n\n    render(){\n        const mappedSpells = this.props.spells.map((data) => <Spells spell={data.spell} type={data.type} effect={data.effect} spellID={data._id}/>)\n        return(\n            <div className='spellsList'>\n                {mappedSpells}\n            </div>\n        )\n    }\n}\n\nexport default withCharacter(SpellsList)"]},"metadata":{},"sourceType":"module"}